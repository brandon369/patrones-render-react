{"ast":null,"code":"var _jsxFileName = \"/Users/brandon/Documents/Platzi/patrones-render-composicion/src/ChangeAlert/index.js\";\nimport React from 'react';\nimport { withStorageListener } from \"./withStorageListener\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangeAlert = ({\n  show,\n  toggleShow\n}) => {\n  if (show) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hubo cambios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleShow(false),\n        children: \"Reload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n};\n\n_c = ChangeAlert;\nconst ChangeAlertWithStorageListener = withStorageListener(ChangeAlert);\n_c2 = ChangeAlertWithStorageListener;\nexport { ChangeAlertWithStorageListener };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChangeAlert\");\n$RefreshReg$(_c2, \"ChangeAlertWithStorageListener\");","map":{"version":3,"sources":["/Users/brandon/Documents/Platzi/patrones-render-composicion/src/ChangeAlert/index.js"],"names":["React","withStorageListener","ChangeAlert","show","toggleShow","ChangeAlertWithStorageListener"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,mBAAR,QAAkC,uBAAlC;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAwB;AAC1C,MAAGD,IAAH,EAAQ;AACN,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMC,UAAU,CAAC,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GATD,MASK;AACH,WAAO,IAAP;AACD;AAEF,CAdD;;KAAMF,W;AAiBN,MAAMG,8BAA8B,GAAGJ,mBAAmB,CAACC,WAAD,CAA1D;MAAMG,8B;AAGN,SAAQA,8BAAR","sourcesContent":["import React from 'react'\nimport {withStorageListener} from \"./withStorageListener\";\n\nconst ChangeAlert = ({show, toggleShow}) => {\n  if(show){\n    return (\n      <div>\n        <p>Hubo cambios</p>\n        <button onClick={() => toggleShow(false)}>\n          Reload\n        </button>\n      </div>\n    )\n  }else{\n    return null\n  }\n\n}\n\n\nconst ChangeAlertWithStorageListener = withStorageListener(ChangeAlert)\n\n\nexport {ChangeAlertWithStorageListener}\n"]},"metadata":{},"sourceType":"module"}