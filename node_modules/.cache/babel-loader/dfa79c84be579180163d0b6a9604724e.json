{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\n\nfunction useLocalStorage(itemName, initialValue) {\n  _s();\n\n  const [sincronizedItem, setSincronizedItem] = React.useState(true);\n  const [error, setError] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [item, setItem] = React.useState(initialValue);\n  React.useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n\n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          parsedItem = initialValue;\n        } else {\n          parsedItem = JSON.parse(localStorageItem);\n        }\n\n        setItem(parsedItem);\n        setLoading(false);\n        setSincronizedItem(true);\n      } catch (error) {\n        setError(error);\n      }\n    }, 3000);\n  }, [sincronizedItem]);\n\n  const saveItem = newItem => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n      setItem(newItem);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  const sincronize = () => {\n    setLoading(true);\n    setSincronizedItem(false);\n  };\n\n  return {\n    item,\n    saveItem,\n    loading,\n    error,\n    sincronize\n  };\n}\n\n_s(useLocalStorage, \"nTrHZiVhX0CkS2jek8sLo3Ymlx8=\");\n\nexport { useLocalStorage };","map":{"version":3,"sources":["/Users/brandon/Documents/Platzi/patrones-render-composicion/src/App/useLocalStorage.js"],"names":["React","useLocalStorage","itemName","initialValue","sincronizedItem","setSincronizedItem","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","localStorageItem","localStorage","getItem","parsedItem","JSON","stringify","parse","saveItem","newItem","stringifiedItem","sincronize"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,YAAnC,EAAiD;AAAA;;AAC/C,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,KAAK,CAACM,QAAN,CAAe,IAAf,CAA9C;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACM,QAAN,CAAe,KAAf,CAA1B;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBV,KAAK,CAACM,QAAN,CAAe,IAAf,CAA9B;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBZ,KAAK,CAACM,QAAN,CAAeH,YAAf,CAAxB;AAEAH,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpBC,IAAAA,UAAU,CAAC,MAAM;AACf,UAAI;AACF,cAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAb,CAAqBf,QAArB,CAAzB;AACA,YAAIgB,UAAJ;;AAEA,YAAI,CAACH,gBAAL,EAAuB;AACrBC,UAAAA,YAAY,CAACJ,OAAb,CAAqBV,QAArB,EAA+BiB,IAAI,CAACC,SAAL,CAAejB,YAAf,CAA/B;AACAe,UAAAA,UAAU,GAAGf,YAAb;AACD,SAHD,MAGO;AACLe,UAAAA,UAAU,GAAGC,IAAI,CAACE,KAAL,CAAWN,gBAAX,CAAb;AACD;;AAEDH,QAAAA,OAAO,CAACM,UAAD,CAAP;AACAR,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAL,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,OAdD,CAcE,OAAOE,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,KAlBS,EAkBP,IAlBO,CAAV;AAmBD,GApBD,EAoBG,CAACH,eAAD,CApBH;;AAsBA,QAAMkB,QAAQ,GAAIC,OAAD,IAAa;AAC5B,QAAI;AACF,YAAMC,eAAe,GAAGL,IAAI,CAACC,SAAL,CAAeG,OAAf,CAAxB;AACAP,MAAAA,YAAY,CAACJ,OAAb,CAAqBV,QAArB,EAA+BsB,eAA/B;AACAZ,MAAAA,OAAO,CAACW,OAAD,CAAP;AACD,KAJD,CAIE,OAAOhB,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,GARD;;AAUA,QAAMkB,UAAU,GAAG,MAAM;AACvBf,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAL,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,GAHD;;AAKA,SAAO;AACLM,IAAAA,IADK;AAELW,IAAAA,QAFK;AAGLb,IAAAA,OAHK;AAILF,IAAAA,KAJK;AAKLkB,IAAAA;AALK,GAAP;AAOD;;GAlDQxB,e;;AAoDT,SAAQA,eAAR","sourcesContent":["import React from 'react';\n\nfunction useLocalStorage(itemName, initialValue) {\n  const [sincronizedItem, setSincronizedItem] = React.useState(true);\n  const [error, setError] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [item, setItem] = React.useState(initialValue);\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n\n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          parsedItem = initialValue;\n        } else {\n          parsedItem = JSON.parse(localStorageItem);\n        }\n\n        setItem(parsedItem);\n        setLoading(false);\n        setSincronizedItem(true)\n      } catch (error) {\n        setError(error);\n      }\n    }, 3000);\n  }, [sincronizedItem]);\n\n  const saveItem = (newItem) => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n      setItem(newItem);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  const sincronize = () => {\n    setLoading(true)\n    setSincronizedItem(false)\n  }\n\n  return {\n    item,\n    saveItem,\n    loading,\n    error,\n    sincronize\n  };\n}\n\nexport {useLocalStorage};\n"]},"metadata":{},"sourceType":"module"}