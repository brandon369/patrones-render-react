{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\n\nfunction useLocalStorage(itemName, initialValue) {\n  _s();\n\n  const [state, dispatch] = React.useReducer(reducer, initialState)(initialValue);\n  const {\n    sincronizedItem,\n    error,\n    loading,\n    item\n  } = state; // const [sincronizedItem, setSincronizedItem] = React.useState(true);\n  // const [error, setError] = React.useState(false);\n  // const [loading, setLoading] = React.useState(true);\n  // const [item, setItem] = React.useState(initialValue);\n\n  const onError = error => {\n    dispatch({\n      type: actionTypes.error,\n      payload: error\n    });\n  };\n\n  const onSuccess = parsedItem => {\n    dispatch({\n      type: actionTypes.success,\n      payload: parsedItem\n    });\n  };\n\n  const onSave = item => {\n    dispatch({\n      type: actionTypes.save,\n      payload: item\n    });\n  };\n\n  const onSincronize = () => {\n    dispatch({\n      type: actionTypes.sincronize\n    });\n  };\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n\n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          parsedItem = initialValue;\n        } else {\n          parsedItem = JSON.parse(localStorageItem);\n        } // setItem(parsedItem);\n        // setLoading(false);\n        // setSincronizedItem(true)\n\n\n        onSuccess(parsedItem);\n      } catch (error) {\n        onError(error); // setError(error);\n      }\n    }, 3000);\n  }, [sincronizedItem]);\n\n  const saveItem = newItem => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem); // setItem(newItem);\n\n      onSave(newItem);\n    } catch (error) {\n      // setError(error);\n      onError(error);\n    }\n  };\n\n  const sincronize = () => {\n    onSincronize(); // setLoading(true)\n    // setSincronizedItem(false)\n  };\n\n  return {\n    item,\n    saveItem,\n    loading,\n    error,\n    sincronize\n  };\n}\n\n_s(useLocalStorage, \"fPKvVo1WePSSkqBu6pd5SIJ+qm8=\");\n\nconst initialState = ({\n  initialValue\n}) => ({\n  sincronizedItem: true,\n  error: false,\n  loading: true,\n  item: initialValue\n});\n\nconst actionTypes = {\n  error: 'ERROR',\n  success: 'SUCCESS',\n  save: 'SAVE',\n  sincronize: 'SINCRONIZE'\n};\n\nconst reducerObject = (state, payload) => ({\n  [actionTypes.error]: { ...state,\n    error: true\n  },\n  [actionTypes.success]: { ...state,\n    error: false,\n    loading: false,\n    sincronizedItem: true,\n    item: payload\n  },\n  [actionTypes.save]: { ...state,\n    error: true\n  },\n  [actionTypes.sincronize]: { ...state,\n    sincronizedItem: false,\n    loading: true\n  }\n});\n\nconst reducer = (state, action) => {\n  return reducerObject(state, action.payload)[action.type] || state;\n};\n\nexport { useLocalStorage };","map":{"version":3,"sources":["/Users/brandon/Documents/Platzi/patrones-render-composicion/src/App/useLocalStorage.js"],"names":["React","useLocalStorage","itemName","initialValue","state","dispatch","useReducer","reducer","initialState","sincronizedItem","error","loading","item","onError","type","actionTypes","payload","onSuccess","parsedItem","success","onSave","save","onSincronize","sincronize","useEffect","setTimeout","localStorageItem","localStorage","getItem","setItem","JSON","stringify","parse","saveItem","newItem","stringifiedItem","reducerObject","action"],"mappings":"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","sourcesContent":["import React from 'react';\n\nfunction useLocalStorage(itemName, initialValue) {\n\n\n  const [state, dispatch] = React.useReducer(reducer, initialState)(initialValue);\n\n  const {\n    sincronizedItem,\n    error,\n    loading,\n    item\n  } = state\n\n  // const [sincronizedItem, setSincronizedItem] = React.useState(true);\n  // const [error, setError] = React.useState(false);\n  // const [loading, setLoading] = React.useState(true);\n  // const [item, setItem] = React.useState(initialValue);\n\n  const onError = (error) => {\n    dispatch({type: actionTypes.error, payload: error})\n  }\n  const onSuccess = (parsedItem) => {\n    dispatch({type: actionTypes.success, payload: parsedItem})\n  }\n\n  const onSave = (item) => {\n    dispatch({type: actionTypes.save, payload: item})\n  }\n\n  const onSincronize = () => {\n    dispatch({type: actionTypes.sincronize})\n  }\n  React.useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n\n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          parsedItem = initialValue;\n        } else {\n          parsedItem = JSON.parse(localStorageItem);\n        }\n\n        // setItem(parsedItem);\n        // setLoading(false);\n        // setSincronizedItem(true)\n\n        onSuccess(parsedItem)\n\n      } catch (error) {\n        onError(error)\n        // setError(error);\n      }\n    }, 3000);\n  }, [sincronizedItem]);\n\n  const saveItem = (newItem) => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n\n      // setItem(newItem);\n      onSave(newItem)\n    } catch (error) {\n      // setError(error);\n      onError(error)\n    }\n  };\n\n  const sincronize = () => {\n    onSincronize()\n    // setLoading(true)\n    // setSincronizedItem(false)\n  }\n\n  return {\n    item,\n    saveItem,\n    loading,\n    error,\n    sincronize\n  };\n\n}\n\nconst initialState = ({initialValue}) => ({\n  sincronizedItem: true,\n  error: false,\n  loading: true,\n  item: initialValue\n})\n\nconst actionTypes = {\n  error: 'ERROR',\n  success: 'SUCCESS',\n  save: 'SAVE',\n  sincronize: 'SINCRONIZE',\n}\n\nconst reducerObject = (state, payload) => ({\n  [actionTypes.error]: {\n    ...state,\n    error: true\n  },\n\n  [actionTypes.success]: {\n    ...state,\n    error: false,\n    loading: false,\n    sincronizedItem: true,\n    item: payload\n  },\n  [actionTypes.save]: {\n    ...state,\n    error: true\n  },\n  [actionTypes.sincronize]: {\n    ...state,\n    sincronizedItem: false,\n    loading: true,\n  },\n\n})\n\nconst reducer = (state, action) => {\n  return  reducerObject(state, action.payload)[action.type] || state\n}\n\n\nexport {useLocalStorage};\n"]},"metadata":{},"sourceType":"module"}