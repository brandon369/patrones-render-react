{"ast":null,"code":"var _jsxFileName = \"/Users/brandon/Documents/Platzi/patrones-render-composicion/src/App/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTodos } from './useTodos'; // import { AppUI } from './AppUI';\n\nimport { TodoCounter } from '../TodoCounter';\nimport { TodoSearch } from '../TodoSearch';\nimport { TodoList } from '../TodoList';\nimport { TodoItem } from '../TodoItem';\nimport { TodosError } from '../TodosError';\nimport { TodosLoading } from '../TodosLoading';\nimport { EmptyTodos } from '../EmptyTodos';\nimport { TodoForm } from '../TodoForm';\nimport { CreateTodoButton } from '../CreateTodoButton';\nimport { Modal } from '../Modal';\nimport TodoHeader from \"../todoHeader\";\nimport EmptySearchResults from \"../EmptySearchResults\";\nimport { ChangeAlert } from \"../ChangeAlert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    error,\n    loading,\n    searchedTodos,\n    completeTodo,\n    deleteTodo,\n    openModal,\n    setOpenModal,\n    totalTodos,\n    completedTodos,\n    searchValue,\n    setSearchValue,\n    addTodo,\n    sincronizeTodo\n  } = useTodos();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoHeader, {\n      loading: loading,\n      children: [/*#__PURE__*/_jsxDEV(TodoCounter, {\n        totalTodos: totalTodos,\n        completedTodos: completedTodos // loading={loading}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoSearch, {\n        searchValue: searchValue,\n        setSearchValue: setSearchValue // loading={loading}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      error: error,\n      loading: loading,\n      searchedTodos: searchedTodos,\n      totalTodos: totalTodos,\n      searchValue: searchValue,\n      onError: () => /*#__PURE__*/_jsxDEV(TodosError, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 24\n      }, this),\n      onLoading: () => /*#__PURE__*/_jsxDEV(TodosLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 26\n      }, this),\n      onEmptyTodos: () => /*#__PURE__*/_jsxDEV(EmptyTodos, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }, this),\n      onEmptySearchResults: searchText => /*#__PURE__*/_jsxDEV(EmptySearchResults, {\n        searchText: searchText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 47\n      }, this) // render={todo => (\n      //   <TodoItem\n      //     key={todo.text}\n      //     text={todo.text}\n      //     completed={todo.completed}\n      //     onComplete={() => completeTodo(todo.text)}\n      //     onDelete={() => deleteTodo(todo.text)}\n      //   />\n      // )}\n      ,\n      children: todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        text: todo.text,\n        completed: todo.completed,\n        onComplete: () => completeTodo(todo.text),\n        onDelete: () => deleteTodo(todo.text)\n      }, todo.text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), !!openModal && /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(TodoForm, {\n        addTodo: addTodo,\n        setOpenModal: setOpenModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CreateTodoButton, {\n      setOpenModal: setOpenModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChangeAlert, {\n      sincronize: sincronizeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DtGdp0oKaug3NCqWSRoAposeLoM=\", false, function () {\n  return [useTodos];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/brandon/Documents/Platzi/patrones-render-composicion/src/App/index.js"],"names":["React","useTodos","TodoCounter","TodoSearch","TodoList","TodoItem","TodosError","TodosLoading","EmptyTodos","TodoForm","CreateTodoButton","Modal","TodoHeader","EmptySearchResults","ChangeAlert","App","error","loading","searchedTodos","completeTodo","deleteTodo","openModal","setOpenModal","totalTodos","completedTodos","searchValue","setSearchValue","addTodo","sincronizeTodo","searchText","todo","text","completed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useTodos} from './useTodos';\n// import { AppUI } from './AppUI';\n\nimport {TodoCounter} from '../TodoCounter';\nimport {TodoSearch} from '../TodoSearch';\nimport {TodoList} from '../TodoList';\nimport {TodoItem} from '../TodoItem';\nimport {TodosError} from '../TodosError';\nimport {TodosLoading} from '../TodosLoading';\nimport {EmptyTodos} from '../EmptyTodos';\nimport {TodoForm} from '../TodoForm';\nimport {CreateTodoButton} from '../CreateTodoButton';\nimport {Modal} from '../Modal';\nimport TodoHeader from \"../todoHeader\";\nimport EmptySearchResults from \"../EmptySearchResults\";\nimport {ChangeAlert} from \"../ChangeAlert\";\n\n\nfunction App() {\n\n\n  const {\n    error,\n    loading,\n    searchedTodos,\n    completeTodo,\n    deleteTodo,\n    openModal,\n    setOpenModal,\n    totalTodos,\n    completedTodos,\n    searchValue,\n    setSearchValue,\n    addTodo,\n    sincronizeTodo\n  } = useTodos();\n\n\n  return (\n    <React.Fragment>\n      <TodoHeader loading={loading}>\n        <TodoCounter\n          totalTodos={totalTodos}\n          completedTodos={completedTodos}\n          // loading={loading}\n        />\n        <TodoSearch\n          searchValue={searchValue}\n          setSearchValue={setSearchValue}\n          // loading={loading}\n        />\n\n      </TodoHeader>\n\n      {/*render Props*/}\n      <TodoList\n        error={error}\n        loading={loading}\n        searchedTodos={searchedTodos}\n        totalTodos={totalTodos}\n        searchValue={searchValue}\n        onError={() => <TodosError/>}\n        onLoading={() => <TodosLoading/>}\n        onEmptyTodos={() => <EmptyTodos/>}\n        onEmptySearchResults={(searchText) => <EmptySearchResults searchText={searchText}/>}\n        // render={todo => (\n        //   <TodoItem\n        //     key={todo.text}\n        //     text={todo.text}\n        //     completed={todo.completed}\n        //     onComplete={() => completeTodo(todo.text)}\n        //     onDelete={() => deleteTodo(todo.text)}\n        //   />\n        // )}\n\n      >\n        {todo => (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => completeTodo(todo.text)}\n            onDelete={() => deleteTodo(todo.text)}\n          />\n        )}\n\n      </TodoList>\n\n\n      {/*<TodoList>*/}\n      {/*  {error && <TodosError/>}*/}\n      {/*  {loading && <TodosLoading/>}*/}\n      {/*  {(!loading && !searchedTodos.length) && <EmptyTodos/>}*/}\n\n      {/*  {searchedTodos.map(todo => (*/}\n      {/*    <TodoItem*/}\n      {/*      key={todo.text}*/}\n      {/*      text={todo.text}*/}\n      {/*      completed={todo.completed}*/}\n      {/*      onComplete={() => completeTodo(todo.text)}*/}\n      {/*      onDelete={() => deleteTodo(todo.text)}*/}\n      {/*    />*/}\n      {/*  ))}*/}\n      {/*</TodoList>*/}\n\n      {!!openModal && (\n        <Modal>\n          <TodoForm addTodo={addTodo} setOpenModal={setOpenModal}/>\n        </Modal>\n      )}\n\n      <CreateTodoButton\n        setOpenModal={setOpenModal}\n      />\n\n\n      <ChangeAlert\n        sincronize={sincronizeTodo}\n      />\n    </React.Fragment>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}